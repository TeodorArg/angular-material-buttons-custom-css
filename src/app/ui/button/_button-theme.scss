@use "sass:map";
@use "@angular/material" as mat;

@use "/node_modules/@material/button/button-text-theme" as mdc-button-text-theme;
@use "/node_modules/@material/button/button-filled-theme" as
  mdc-button-filled-theme;
@use "/node_modules/@material/button/button-protected-theme" as
  mdc-button-protected-theme;
@use "/node_modules/@material/button/button-outlined-theme" as
  mdc-button-outlined-theme;

@use "/node_modules/@angular/material/button/button-theme-private";

@use "/node_modules/@angular/material/core/mdc-helpers/mdc-helpers";
@use "/node_modules/@angular/material/core/theming/theming";

@use "@material/theme/theme-color" as mdc-theme-color;

@mixin _button-variant($color) {
  @include mdc-button-text-theme.theme(
    (
      label-text-color: $color,
    )
  );
}

@mixin _unelevated-button-variant($foreground, $background) {
  @include mdc-button-filled-theme.theme(
    (
      container-color: $background,
      label-text-color: $foreground,
    )
  );
}

@mixin _outlined-button-variant($color, $outline-color, $width) {
  @include mdc-button-outlined-theme.theme(
    (
      label-text-color: $color,
      outline-width: $width,
      outline-color: $outline-color,
    )
  );
}

@mixin color($variants) {
  .mat-mdc-button {
    @each $variant, $variant-palette in $variants {
      &.mat-#{$variant} {
        @include _button-variant(mat.get-color-from-palette($variant-palette));
      }
    }
  }

  .mat-mdc-unelevated-button {
    @each $variant, $variant-palette in $variants {
      &.mat-#{$variant} {
        @include _unelevated-button-variant(
          mat.get-contrast-color-from-palette($variant-palette, 500),
          mat.get-color-from-palette($variant-palette, 500)
        );

        transition: all 0.25s linear;

        @include button-theme-private.apply-disabled-style() {
          @include mdc-button-filled-theme.theme(
            (
              disabled-container-color:
                rgba(mat.get-color-from-palette($variant-palette, 500), 0.4),
              disabled-label-text-color:
                mat.get-contrast-color-from-palette($variant-palette, 500),
              container-color: mat.get-color-from-palette($variant-palette, 500),
              label-text-color:
                mat.get-color-from-palette($variant-palette, 500),
            )
          );
        }

        .mat-mdc-button-persistent-ripple::before {
          display: none;
        }

        &:hover {
          @include _unelevated-button-variant(
            mat.get-contrast-color-from-palette($variant-palette, 600),
            mat.get-color-from-palette($variant-palette, 600)
          );
        }

        &:active,
        &.cdk-focused {
          @include _unelevated-button-variant(
            mat.get-contrast-color-from-palette($variant-palette, 700),
            mat.get-color-from-palette($variant-palette, 700)
          );
        }
      }
    }
  }

  .mat-mdc-outlined-button {
    @each $variant, $variant-palette in $variants {
      &.mat-#{$variant} {
        @include _outlined-button-variant(
          mat.get-color-from-palette($variant-palette),
          mat.get-color-from-palette($variant-palette),
          2px
        );
        &:hover {
          background-color: rgba(
            mat.get-color-from-palette($variant-palette, 500),
            0.4
          );
        }
      }
    }
  }
}
